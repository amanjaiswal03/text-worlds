{"ast":null,"code":"import _slicedToArray from \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/AddWorld/AddWorld.js\";\nimport React, { useState } from 'react';\nimport { Form } from 'semantic-ui-react';\n\nconst AddWorld = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  return React.createElement(Form, {\n    className: \"add-world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    label: \"Name of the world\",\n    control: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    grouped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Type of World\"), React.createElement(Form.Field, {\n    label: \"Public\",\n    control: \"input\",\n    type: \"radio\",\n    name: \"htmlRadios\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    label: \"Private\",\n    control: \"input\",\n    type: \"radio\",\n    name: \"htmlRadios\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    grouped: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Join with Moderator Approval?\"), React.createElement(Form.Field, {\n    label: \"Yes\",\n    control: \"input\",\n    type: \"radio\",\n    name: \"htmlRadios2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    label: \"No\",\n    control: \"input\",\n    type: \"radio\",\n    name: \"htmlRadios2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    label: \"Description of the World\",\n    control: \"textarea\",\n    rows: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Create World\"));\n};\n\nexport default AddWorld;","map":{"version":3,"sources":["/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/AddWorld/AddWorld.js"],"names":["React","useState","Form","AddWorld","name","setName"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBAEKF,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEZG,IAFY;AAAA,QAENC,OAFM;;AAOnB,SACF,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,YAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,YAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAJF,EAmBE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,IAAD,CAAM,KAAN;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,IAAI,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAnBF,EAkCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAC,0BAAlB;AAA6C,IAAA,OAAO,EAAC,UAArD;AAAgE,IAAA,IAAI,EAAC,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EAmCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnCF,CADE;AAyCH,CAhDD;;AAiDA,eAAeF,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Form } from 'semantic-ui-react'\n\nconst AddWorld = () => {\n    \n    const [name, setName] = useState('');\n    \n    \n    \n    \n    return(\n  <Form className = \"add-world\">\n    <Form.Group widths='equal'>\n      <Form.Field label='Name of the world' control='input' />\n    </Form.Group>\n    <Form.Group grouped>\n      <label>Type of World</label>\n      <Form.Field\n        label='Public'\n        control='input'\n        type='radio'\n        name='htmlRadios'\n      />\n      <Form.Field\n        label='Private'\n        control='input'\n        type='radio'\n        name='htmlRadios'\n      />\n    </Form.Group>\n    <Form.Group grouped>\n      <label>Join with Moderator Approval?</label>\n      <Form.Field\n        label='Yes'\n        control='input'\n        type='radio'\n        name='htmlRadios2'\n      />\n      <Form.Field\n        label='No'\n        control='input'\n        type='radio'\n        name='htmlRadios2'\n      />\n    </Form.Group>\n    <Form.Field label='Description of the World' control='textarea' rows='3' />\n    <Form.Field control='button'>\n      Create World\n    </Form.Field>\n  </Form>\n)\n}\nexport default AddWorld;"]},"metadata":{},"sourceType":"module"}