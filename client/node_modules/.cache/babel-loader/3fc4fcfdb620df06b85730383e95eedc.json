{"ast":null,"code":"var _jsxFileName = \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/World/World.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport CardEvent from './CardEvent';\nimport { getWorldQuery } from '../../queries/queries';\nimport ModalPopup from './ModalPopup';\n\nconst World = props => {\n  const _useQuery = useQuery(getWorldQuery, {\n    variables: {\n      id: props.match.params.id\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Error :(\");\n  console.log(data);\n  return React.createElement(\"div\", {\n    className: \"world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"world-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, data.world.name)), React.createElement(\"div\", {\n    className: \"join-world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ModalPopup, {\n    worldId: data.world._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"world-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, data.world.description), React.createElement(\"div\", {\n    className: \"world-events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"EVENTS\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"world-elements-inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, data.world.events.map(event => React.createElement(\"div\", {\n    key: event._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(CardEvent, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"world-characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"CHARACTERS\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"world-elements-inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, data.world.characters.map(character => React.createElement(\"div\", {\n    key: character._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardEvent, {\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"world-places\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"PLACES\"), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"world-elements-inside\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, data.world.characters.map(character => character.places.map(place => React.createElement(\"div\", {\n    key: place._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardEvent, {\n    place: place,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })))))));\n};\n\nexport default World;","map":{"version":3,"sources":["/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/World/World.js"],"names":["React","useQuery","CardEvent","getWorldQuery","ModalPopup","World","props","variables","id","match","params","loading","error","data","console","log","world","name","_id","description","events","map","event","characters","character","places","place"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport CardEvent from './CardEvent';\nimport { getWorldQuery } from '../../queries/queries';\nimport ModalPopup from './ModalPopup';\n\nconst World = (props) => {\n    const { loading, error, data } = useQuery(getWorldQuery, {\n        variables: { id: props.match.params.id },\n      });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.log(data);\n    return (\n        <div className = \"world\">\n            <div className = \"world-title\">\n                <div><strong>{data.world.name}</strong></div>\n                <div className = \"join-world\"><ModalPopup worldId = {data.world._id} /></div>\n            </div>\n            <div className = \"world-details\">\n                {data.world.description}\n            </div>\n            <div className = \"world-events\">\n                <strong>EVENTS</strong> <br></br>\n                <div className = \"world-elements-inside\">\n                    {data.world.events.map((event)=> (\n                        <div key = {event._id}>\n                            <CardEvent event = {event}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className = \"world-characters\">\n                <strong>CHARACTERS</strong> <br></br>\n                <div className = \"world-elements-inside\">\n                    {data.world.characters.map((character)=> (\n                        <div key = {character._id}>\n                            <CardEvent character = {character}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n            <div className = \"world-places\">\n                <strong>PLACES</strong> <br></br>\n                <div className = \"world-elements-inside\">\n                    {data.world.characters.map((character)=> (\n                        character.places.map((place) => (\n                            <div key = {place._id}>\n                                <CardEvent place = {place}/>\n                            </div>\n                        ))\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n \nexport default World;"]},"metadata":{},"sourceType":"module"}