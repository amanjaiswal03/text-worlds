{"ast":null,"code":"import _slicedToArray from \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/AddWorld/AddWorld.js\";\nimport React, { useState } from 'react';\nimport { Form } from 'semantic-ui-react';\n\nconst AddWorld = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        description = _useState4[0],\n        setDescription = _useState4[1];\n\n  return React.createElement(Form, {\n    className: \"add-world\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    label: \"Name of the world\",\n    control: \"input\",\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    label: \"Description of the World\",\n    control: \"textarea\",\n    rows: \"3\",\n    onChange: e => setDescription(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Create World\"));\n};\n\nexport default AddWorld;","map":{"version":3,"sources":["/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/AddWorld/AddWorld.js"],"names":["React","useState","Form","AddWorld","name","setName","description","setDescription","handleSubmit","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA,oBAEKF,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,QAEZG,IAFY;AAAA,QAENC,OAFM;;AAAA,qBAGmBJ,QAAQ,CAAC,EAAD,CAH3B;AAAA;AAAA,QAGZK,WAHY;AAAA,QAGCC,cAHD;;AAQnB,SACF,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAG,WAAlB;AAA8B,IAAA,QAAQ,EAAIC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,MAAM,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAC,mBAAlB;AAAsC,IAAA,OAAO,EAAC,OAA9C;AAAsD,IAAA,QAAQ,EAAKC,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAkCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAC,0BAAlB;AAA6C,IAAA,OAAO,EAAC,UAArD;AAAgE,IAAA,IAAI,EAAC,GAArE;AAAyE,IAAA,QAAQ,EAAKF,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,EAmCE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAnCF,CADE;AAyCH,CAjDD;;AAkDA,eAAeR,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport { Form } from 'semantic-ui-react'\n\nconst AddWorld = () => {\n    \n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    \n    \n    \n    \n    return(\n  <Form className = \"add-world\" onSubmit = {handleSubmit}>\n    <Form.Group widths='equal'>\n      <Form.Field label='Name of the world' control='input' onChange = {(e) => setName(e.target.value)} />\n    </Form.Group>\n    {/* <Form.Group grouped>\n      <label>Type of World</label>\n      <Form.Field\n        label='Public'\n        control='input'\n        type='radio'\n        name='htmlRadios'\n      />\n      <Form.Field\n        label='Private'\n        control='input'\n        type='radio'\n        name='htmlRadios'\n      />\n    </Form.Group>\n    <Form.Group grouped>\n      <label>Join with Moderator Approval?</label>\n      <Form.Field\n        label='Yes'\n        control='input'\n        type='radio'\n        name='htmlRadios2'\n      />\n      <Form.Field\n        label='No'\n        control='input'\n        type='radio'\n        name='htmlRadios2'\n      /> */}\n    {/* </Form.Group> */}\n    <Form.Field label='Description of the World' control='textarea' rows='3' onChange = {(e) => setDescription(e.target.value)} />\n    <Form.Field control='button'>\n      Create World\n    </Form.Field>\n  </Form>\n)\n}\nexport default AddWorld;"]},"metadata":{},"sourceType":"module"}