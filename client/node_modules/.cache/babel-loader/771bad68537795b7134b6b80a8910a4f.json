{"ast":null,"code":"var _jsxFileName = \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/Homepage/WorldList.js\";\nimport React from 'react';\nimport { List, Image } from 'semantic-ui-react';\nimport WorldDescription from './WorldDescription';\nimport p1 from '../../assets/Worlds/p1.png';\nimport p2 from '../../assets/Worlds/p2.png';\nimport pf3 from '../../assets/Worlds/pf3.png';\nimport pf4 from '../../assets/Worlds/pf4.png';\nimport pp1 from '../../assets/Worlds/pp1.png';\nimport { getAllWorlds } from '../../queries/queries';\nimport { useQuery } from '@apollo/react-hooks';\n\nfunction WorldList() {\n  const _useQuery = useQuery(getAllWorlds),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  const picNames = [p1, p2, pf3, pf4, pp1];\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Error :(\");\n  return React.createElement(\"div\", {\n    className: \"world-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, data.worlds.map(world => React.createElement(List, {\n    size: \"massive\",\n    key: world._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Image, {\n    avatar: true,\n    src: picNames[Math.floor(Math.random() * Math.floor(max))],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(List.Header, {\n    as: \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, world.name), React.createElement(List.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(WorldDescription, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, world.description)))))));\n}\n\nexport default WorldList;","map":{"version":3,"sources":["/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/Homepage/WorldList.js"],"names":["React","List","Image","WorldDescription","p1","p2","pf3","pf4","pp1","getAllWorlds","useQuery","WorldList","loading","error","data","picNames","worlds","map","world","_id","Math","floor","random","max","name","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,EAAP,MAAe,4BAAf;AACA,OAAOC,EAAP,MAAe,4BAAf;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAGA,SAASC,SAAT,GAAqB;AAAA,oBACYD,QAAQ,CAACD,YAAD,CADpB;AAAA,QACbG,OADa,aACbA,OADa;AAAA,QACJC,KADI,aACJA,KADI;AAAA,QACGC,IADH,aACGA,IADH;;AAErB,QAAMC,QAAQ,GAAG,CAACX,EAAD,EAAKC,EAAL,EAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,CAAjB;AAEA,MAAII,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACP,SACE;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACE,MAAL,CAAYC,GAAZ,CAAkBC,KAAF,IACjB,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAqB,IAAA,GAAG,EAAIA,KAAK,CAACC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,GAAG,EAAGJ,QAAQ,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWE,GAAX,CAA3B,CAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,KAAK,CAACM,IAA5B,CADA,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBN,KAAK,CAACO,WAA1B,CADJ,CAFF,CAFF,CADF,CADC,CADH,CADF;AAiBH;;AAGD,eAAed,SAAf","sourcesContent":["import React from 'react'\nimport { List, Image } from 'semantic-ui-react'\nimport WorldDescription from './WorldDescription';\nimport p1 from '../../assets/Worlds/p1.png'\nimport p2 from '../../assets/Worlds/p2.png'\nimport pf3 from '../../assets/Worlds/pf3.png'\nimport pf4 from '../../assets/Worlds/pf4.png'\nimport pp1 from '../../assets/Worlds/pp1.png'\n\nimport { getAllWorlds } from '../../queries/queries';\nimport { useQuery } from '@apollo/react-hooks';\n\n\nfunction WorldList() {\nconst { loading, error, data } = useQuery(getAllWorlds);\nconst picNames = [p1, p2, pf3, pf4, pp1];\n\nif (loading) return <p>Loading...</p>;\nif (error) return <p>Error :(</p>;\n    return (\n      <div className = \"world-list\">\n        {data.worlds.map(( world ) => (\n        <List size='massive' key = {world._id}>\n          <List.Item>\n            <Image avatar src={ picNames[Math.floor(Math.random() * Math.floor(max))] } />\n            <List.Content>\n            <List.Header as='a'>{ world.name }</List.Header>\n              <List.Description>\n                  <WorldDescription>{ world.description }</WorldDescription>\n              </List.Description>\n            </List.Content>\n          </List.Item>\n        </List>\n        ))}\n      </div>\n    );\n}\n\n\nexport default WorldList;"]},"metadata":{},"sourceType":"module"}