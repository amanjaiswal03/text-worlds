{"ast":null,"code":"var _jsxFileName = \"/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/World/World.js\";\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport CardEvent from './CardEvent';\nimport { getWorldQuery } from '../../queries/queries';\n\nconst World = props => {\n  const _useQuery = useQuery(getWorldQuery, {\n    variables: {\n      id: props.match.params.id\n    }\n  }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Error :(\");\n  console.log(data);\n  return React.createElement(\"div\", {\n    className: \"world\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"world-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, data.world.name)), React.createElement(\"div\", {\n    className: \"world-details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, data.world.description), React.createElement(\"div\", {\n    className: \"world-events\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"EVENTS \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"world-characters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"CHARACTERS \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), data.world.characters.map(character => React.createElement(CardEvent, {\n    character: character,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }))));\n};\n\nexport default World;","map":{"version":3,"sources":["/Users/amanjaiswal/Desktop/projects/text-worlds/client/src/Components/World/World.js"],"names":["React","useQuery","CardEvent","getWorldQuery","World","props","variables","id","match","params","loading","error","data","console","log","world","name","description","characters","map","character"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA,oBACYJ,QAAQ,CAACE,aAAD,EAAgB;AACrDG,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBF;AAAzB;AAD0C,GAAhB,CADpB;AAAA,QACbG,OADa,aACbA,OADa;AAAA,QACJC,KADI,aACJA,KADI;AAAA,QACGC,IADH,aACGA,IADH;;AAIrB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACXE,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACI;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,IAAI,CAACG,KAAL,CAAWC,IAApB,CADJ,CADJ,EAII;AAAK,IAAA,SAAS,EAAG,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,CAACG,KAAL,CAAWE,WADhB,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADX,CAPJ,EAUI;AAAK,IAAA,SAAS,EAAG,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADf,EAEKL,IAAI,CAACG,KAAL,CAAWG,UAAX,CAAsBC,GAAtB,CAA2BC,SAAD,IACvB,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAIA,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAFL,CAVJ,CADJ;AAmBH,CA1BD;;AA4BA,eAAehB,KAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport CardEvent from './CardEvent';\nimport { getWorldQuery } from '../../queries/queries';\n\nconst World = (props) => {\n    const { loading, error, data } = useQuery(getWorldQuery, {\n        variables: { id: props.match.params.id },\n      });\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error :(</p>;\n    console.log(data);\n    return (\n        <div className = \"world\">\n            <div className = \"world-title\">\n                <strong>{data.world.name}</strong>\n            </div>\n            <div className = \"world-details\">\n                {data.world.description}\n            </div>\n            <div className = \"world-events\">\n                EVENTS <br></br>\n            </div>\n            <div className = \"world-characters\">\n                CHARACTERS <br></br>\n                {data.world.characters.map((character)=> (\n                    <CardEvent character = {character}/>\n                ))}\n            </div>\n        </div>\n    );\n}\n \nexport default World;"]},"metadata":{},"sourceType":"module"}